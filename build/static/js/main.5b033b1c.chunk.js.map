{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","key","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAaeA,EAXF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACC,wBAAIC,UAAU,QACZJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCUxB,EAfA,WAEd,OADgBK,IAAMC,IAHP,cAIAC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa3B,EAVA,SAAAC,GAEd,OADgBL,IAAMM,KARP,aAQqBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ3B,EALA,SAACG,EAAIF,GAEnB,OADkBL,IAAMQ,IAAN,UAbH,aAaG,YAAwBD,GAAMF,GACjCH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAgB,OAAZA,EACI,KAIP,yBAAKb,UAAU,SACba,ICQWC,EAfA,WAOd,OACC,yBAAKC,MAPc,CACnBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKT,6BACA,0DC8EYC,EApFH,WACX,IADiB,EAESC,mBAAS,IAFlB,mBAEVC,EAFU,KAEHC,EAFG,OAGaF,mBAFV,eADH,mBAGVG,EAHU,KAGDC,EAHC,OAIaJ,oBAAS,GAJtB,mBAIVK,EAJU,KAIDC,EAJC,OAKuBN,mBAAS,MALhC,mBAKVO,EALU,KAKIC,EALJ,KAcjBC,qBAPa,WACZC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAGE,IAEhBC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAwCMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAAAxC,GAAI,OAAuB,IAAnBA,EAAKG,aAEhE,OACC,6BACA,qCACA,kBAAC,EAAD,CAAcc,QAASc,IACvB,4BAAQzB,QAAS,kBAAMwB,GAAYD,KAAnC,QACOA,EAAU,YAAc,OAE/B,4BACEU,EAAYE,KAAI,SAAAzC,GAAI,OACpB,kBAAC,EAAD,CACC0C,IAAK1C,EAAKc,GACVd,KAAMA,EACNC,iBAAkB,kBArCK,SAACa,GAC3B,IAAMd,EAAOyB,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,KAChC+B,EAAW,eAAO7C,EAAP,CAAaG,WAAYH,EAAKG,YAE/C+B,EACSpB,EAAI+B,GACXpC,MAAK,SAAAC,GACLgB,EAASD,EAAMgB,KAAI,SAAAzC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOU,SACnDoC,OAAM,SAAAC,GACNf,EAAgB,aAAD,OACDhC,EAAKK,QADJ,wCAEf2C,YAAW,WACVhB,EAAgB,QACd,KACHN,EAASD,EAAMe,QAAO,SAAAI,GAAC,OAAIA,EAAE9B,KAAOA,SAuBXmC,CAAmBjD,EAAKc,WAGnD,0BAAMoC,SAzDS,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAa,CAClBhD,QAASsB,EACT2B,MAAM,IAAIC,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,GAC3B5C,GAAIW,EAAMa,OAAS,GAGpBJ,EACSmB,GACP5C,MAAK,SAAAC,GACLgB,EAASD,EAAMkC,OAAOjD,IACtBkB,EAAW,SA6CZ,2BAAOgC,MAAOjC,EAASkC,SAvBA,SAACV,GACzBf,QAAQC,IAAIc,EAAMW,OAAOF,OACzBhC,EAAWuB,EAAMW,OAAOF,UAsBvB,4BAAQG,KAAK,UAAb,SAED,kBAAC,EAAD,Q,MChFFC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5b033b1c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance})  => {\n\tconst label = note.important ? 'make not important' : 'make important'\n\n\treturn (\n\t\t<li className='note'>\n\t\t\t{note.content}\n\t\t\t<button onClick={toggleImportance}>{label}</button>\n\t\t</li>\n\t)\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n}\n\nconst create = newObject => {\n\tconst request = axios.post(baseUrl, newObject)\n\treturn request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  \tconst request = axios.put(`${baseUrl}/${id}`, newObject)\n\treturn request.then(response => response.data)\n}\n\nexport default { \n  getAll, \n  create, \n  update \n}","import React from 'react'\n\nconst Notification = ({ message }) => {\n\tif (message === null){\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n\tconst footerStyle = {\n\t\tcolor: 'green',\n\t\tfontStyle: 'italic',\n\t\tfontSize: 16\n\t}\n\n\treturn (\n\t\t<div style={footerStyle}>\n\t\t\t<br />\n\t\t\t<em>Tretas, das mais pesadas</em>\n\t\t</div>\n\t)\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\n\nconst App = () => {\n\tconst newNoteText = 'New note...'\n\tconst [notes, setNotes] = useState([])\n\tconst [newNote, setNewNote] = useState(newNoteText)\n\tconst [showAll, setShowAll] = useState(true)\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\n\tconst hook = () => {\n\t\tnoteService\n\t\t\t.getAll()\n\t\t \t.then(initialNotes => {\n\t\t \t \tsetNotes(initialNotes)})\n\t}\n\n\tuseEffect(hook, [])\n\n\tconsole.log('render', notes.length, 'notes')\n\n\tconst addNote = (event) => {\n\t\tevent.preventDefault()\n\t\tconst noteObject = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5,\n\t\t\tid: notes.length + 1,\n\t\t}\n\n\t\tnoteService\n\t\t\t.create(noteObject)\n\t\t\t.then(response => {\n\t\t\t\tsetNotes(notes.concat(response))\n\t\t\t\tsetNewNote('')\n\t\t\t})\n\t}\n\n\tconst toggleImportanceOf = (id) => {\n\t\tconst note = notes.find(n => n.id === id)\n\t\tconst changedNote = {...note, important: !note.important}\n\n\t\tnoteService\n\t\t\t.update(id, changedNote)\n\t\t\t.then(response => {\n\t\t\t\tsetNotes(notes.map(note => note.id !== id ? note : response))})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`The note '${note.content}' has been deleted from the server!`)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t}, 5000)\n\t\t\t\tsetNotes(notes.filter(n => n.id !== id))\n\t\t\t})\n\t}\n\n\tconst handleNoteChange = (event) => {\n\t\tconsole.log(event.target.value)\n\t\tsetNewNote(event.target.value)\n\t}\n\n\tconst notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n\n\treturn (\n\t\t<div>\n\t\t<h1>Notes</h1>\n\t\t<Notification message={errorMessage} />\n\t\t<button onClick={() => setShowAll(!showAll)} >\n\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t</button>\n\t\t<ul>\n\t\t\t{notesToShow.map(note =>\n\t\t\t\t<Note \n\t\t\t\t\tkey={note.id} \n\t\t\t\t\tnote={note} \n\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}/>\n\t\t\t)}\n\t\t</ul>\n\t\t<form onSubmit={addNote}>\n\t\t\t<input value={newNote} onChange={handleNoteChange} />\n\t\t\t<button type=\"submit\">Save</button>\n\t\t</form>\n\t\t<Footer />\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}